{"articles":[{"title":"GAP","img":"../../../img/article/2021-12-04-12-33-29.png","href":"ai/ai-4/0","des":"# 全局平均池化 与 类激活图\r\n\r\n## 信息\r\n\r\n类激活图:[https:://arxiv.org/pdf/1512.04150.pdf](https:://arxiv.org/pdf/1512.04150.pdf)\r\n\r\n文章链接：[https:://arxiv.org/pdf/1512.04150.pdf](https:://arxiv.org/pdf/1512.04150.pdf)\r\n\r\n发表时间：2015-12\r\n\r\n\r\n## 背景\r\n\r\n\r\n## 创新点简介\r\n全连接的出现（左图），让每一个特征图节点和最终的输出节点产生联系，这种联系和注意力机制一样，会产生空间信息的丢失，于是便提出了全局均匀池化的概念，让模型输出某个类的概率之和某一层特征图有关。（使每一层特征输出的均值作为最后结果）\r\n![](../../../img/article/2021-12-04-12-33-29.png)\r\n\r\n## 详细内容\r\n\r\n### 模型结构\r\n\r\n\r\n## 引用\r\n> although image-level class labels indicate only the exis","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.030Z"},{"title":"MaskRCNN","img":"../../../img/article/2021-10-30-13-42-24.png","href":"ai/ai-3/2","des":"# MaskRCNN\r\n\r\n## 信息\r\n\r\n文章标题：\r\n\r\n文章链接：[Mask_RCNN](https://arxiv.org/pdf/1703.06870)\r\n\r\n发表时间：2017-03\r\n\r\n\r\n## 背景\r\n\r\n\r\n## 创新点简介\r\nMaskRCNN在FastRCNN的基础上加入了对于实例掩膜的预测分支，通过bounding box回归检测出每一个物品之后，再对回归框中的每一个像素进行分类，完成语义分割。这样的就实现了实例分割，即`目标检测+语义分割=实力分割`！\r\n\r\n## 详细内容\r\n\r\n### 实例分支训练\r\n训练时，通过当前得到的真实mask中的类别class_id，遍历所有的预测mask，找到class_id类别所对应的预测mask(前向传播中介绍过每个类别都有一个预测mask)，比较真实mask与预测mask每个像素点信息，用的是binary_cross_entropy二分类交叉熵损失函数\r\n![](../../../img/article/2021-10-30-13-42-24.png)\r\n\r\n**实例分割**\r\n![](../../../img/arti","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.029Z"},{"title":"SSIS Metric Learning","img":"../../../img/article/2022-02-25-15-11-58.png","href":"ai/ai-3/3","des":"# 【实例分割】Semantic Instance Segmentation via Deep Metric Learning\r\n\r\n\r\n## 信息\r\n文章链接：[https://arxiv.org/abs/1703.10277](https://arxiv.org/abs/1703.10277)\r\n\r\n发表时间：2017-10\r\n\r\n## 创新点简介\r\n本文使用先计算出两个像素属于同一个目标的可能性后再聚类的方式，完成实例分割任务。`【论文原句】first computing how likely two pixels are to belong to the same object, and then by grouping similar pixels together`。具体来说论文使用全卷积的模型计算出相似度矩阵，然后通过“种子点”聚类相似像素。这些 “种子点” 是由一个全卷积网络训练出来的。\r\n\r\n\r\n## 详细内容\r\n### 模型结构\r\n![](../../../img/article/2022-02-25-15-11-58.png)\r\n上文所说的低层信息，就是这里从骨干","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.029Z"},{"title":"AssociativeEmbedding","img":"../../../img/article/2022-03-22-20-46-17.png","href":"ai/ai-3/5","des":"# Associative Embedding\r\n\r\n## 信息\r\n\r\n文章标题：Associative Embedding: End-to-End Learning for Joint Detection and Grouping\r\n\r\n文章链接：[https://proceedings.neurips.cc/paper/2017/hash/8edd72158ccd2a879f79cb2538568fdc-Abstract.html](https://proceedings.neurips.cc/paper/2017/hash/8edd72158ccd2a879f79cb2538568fdc-Abstract.html)\r\n\r\n发表时间：2017  (NIPS 2017)\r\n\r\n测试数据集： MPII 和 MS-COCO\r\n\r\n## 背景\r\n许多计算机视觉任务可以看作是联合的检测和分组，以关键点检测为例，都是检测较小的视觉单元（例如膝盖，手腕，头部），然后再并将它们分组到更大结构中。作者认为种方法可能是次优的, 因为检测和分组通常是紧密耦合的。\r\n\r\n## 创新点简介\r\n本文探讨了使","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.029Z"},{"title":"DiscriminativeLoss","img":"","href":"ai/ai-3/6","des":"# Discriminative Loss\r\n\r\n## 信息\r\n\r\n文章标题：Semantic Instance Segmentation with a Discriminative Loss Function\r\n\r\n文章链接：[https://arxiv.org/abs/1708.02551](https://arxiv.org/abs/1708.02551)\r\n\r\n发表时间：2017-08 \r\n\r\n\r\n## 背景\r\n\r\n\r\n## 创新点简介\r\n\r\n\r\n## 详细内容\r\n\r\n### 模型结构\r\n\r\n\r\n## 引用","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.029Z"},{"title":"PANet","img":"../../../img/article/2022-03-24-22-55-05.png","href":"ai/ai-3/7","des":"# PANet\r\n\r\n## 信息\r\n\r\n文章标题：Path Aggregation Network for Instance Segmentation\r\n\r\n文章链接：[https://arxiv.org/abs/1803.01534](https://arxiv.org/abs/1803.01534)\r\n\r\n发表时间：2018-03 (CVPR-2018)\r\n\r\n\r\n## 背景\r\nMask-RCNN的信息传播还不够充分。低层特征到高层特征的传递路径过长，FPN中每个proposal只负责金字塔特定的一层，掩码预测只基于单一视角。\r\n\r\n## 创新点简介\r\n- 自底向上的路径增强，为了缩短信息传播路径，同时利用低层特征的精准定位信息\r\n- 动态特征池化，每个proposal利用金字塔所有层的特征，为了避免proposal的随意分配\r\n- 全连接层融合，为了给掩码预测增加信息来源，文中的说法是capture diffrent view\r\n\r\n![](../../../img/article/2022-03-24-22-55-05.png)\r\n\r\n## 详细内容\r\n\r\n### 模型结构\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.029Z"},{"title":"基础","img":"../../../img/article/2021-11-03-13-35-03.png","href":"ai/ai-3/0","des":"# 基础\r\n\r\n![](../../../img/article/2021-11-03-13-35-03.png)\r\n## 实例分割和语义分割\r\n1. 能否完全使用语义分割？\r\n\r\n   不行，由于目标数目不固定，不能让一个实例就是一个类别。一般思路是先进行目标检测，后对检测狂内的物体进行语义分割，判断检测框内语义分割结果与哪个实例掩膜最接近就认为是哪实例。\r\n\r\n2. 存在的问题：两个实例重叠\r\n   \r\n   解决方案1：预测回归框，在回归框里进行二分类。\r\n   \r\n   解决方法2：预测中心，进行聚类。\r\n\r\n   \r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.028Z"},{"title":"InstanceFCN","img":"../../../img/article/2022-03-07-22-06-33.png","href":"ai/ai-3/1","des":"# InstanceFCN\r\n\r\n## 信息\r\n\r\n文章标题：Instance-sensitive Fully Convolutional Networks\r\n\r\n文章链接：[https://link.springer.com/chapter/10.1007/978-3-319-46466-4_32](https://link.springer.com/chapter/10.1007/978-3-319-46466-4_32)\r\n\r\n发表时间：2016-09 (ECCV 2016)\r\n\r\n## 背景\r\n对于以往的图像分割模型，由于卷积具有<font color=\"red\">位置的不敏感性</font>（对于相同的事物，在图像中处于不同的位置，卷积核的输出相同），导致了当两个相似的事物靠近时很难通过卷积来加以区分。\r\n\r\n## 创新点简介\r\n本文使用全卷积神经网络构建端到端的实例分割模型，它只分割每个实例，没有对实例进行分类。基于语义分割的模型，只有一种语义信息，如果两个实例距离贴就无法区分个体。这是由于卷积具有位置不变性造成的，作者使用滑动窗口，将窗口划分为9个小格（编号为1-9），每","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.028Z"},{"title":"initialize","img":"../../../img/article/2021-11-08-20-06-46.png","href":"ai/ai-1/2","des":"# pytorch权重初始化\r\n## 张量生成\r\n【全零张量】\r\n```py\r\ntorch.zeros((a,b,...))\r\n```\r\n\r\n\r\n## xavier 初始化\r\npytorch提供了uniform和normal两种\r\n\r\n![](../../../img/article/2021-11-08-20-06-46.png)\r\n使用normalize 进行初始化，随着网络的加深，梯度会消失。\r\n假设 $ y = ax+b =w1x1+ w2x2 + ... + wnxn + b $\r\n\r\n对于y取方差有 $ var(y) = var(w1x1) + var(w2x1) + var(w2x1) + var(b) = var(y) = N * var(wi) * var(xi)$\r\n所以，kaiming_normal 在初始化的时候让w在的分布都除以了$\\frac{1}{\\sqrt n}$, 来使得通过了全连接层的输出是和X同分布的。\r\n\r\n## kaiming 初始化\r\n针对ReLu 激活函数，有一般的输出，会被变成0，为了保持方差不变，会采用kaiming激活函数。在初始化的时","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.027Z"},{"title":"loss","img":"","href":"ai/ai-1/3","des":"# loss 函数\r\n\r\n## 二次损失函数\r\n\r\n## sigmoid_focal_loss_jit\r\n```python\r\nsigmoid_focal_loss_jit(\r\n            pred,\r\n            class_target,\r\n            alpha=,\r\n            gamma=,\r\n            reduction=\"sum\"\r\n        )\r\n```\r\n\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-03-25T10:41:49.027Z"}]}