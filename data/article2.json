{"articles":[{"title":"有图片","img":"","href":"other/other-0/0","des":"# python 爬取一个网页下所有图片\r\n\r\n```python\r\nimport requests\r\nimport re\r\nimport time\r\n\r\nfrom urllib.parse import urlparse, parse_qs, parse_qsl\r\n\r\n\r\ndef get_html(url):\r\n    '''\r\n    两个参数\r\n    :param url:统一资源定位符,请求网址\r\n    :param headers:请求头\r\n    :return:html\r\n    '''\r\n\r\n    response = requests.get(url)\r\n    # 获取网页信息文本\r\n    html = response.text\r\n    # ***************** End ******************** #\r\n    return html\r\n\r\n\r\ndef findImageUrl(html):\r\n    '''\r\n    通过正则表达式匹配html 文本里的所有图片\r\n    :param html:\r\n    :return:","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"【论文综述】2022-04弱监督","img":"","href":"other/other-1/0","des":"# 【论文综述】 2022 年 4 月 弱监督分割\r\n\r\n2022 年已经过去 4个月，在弱监督实例分割领域呈现出两股比较主流的趋势。\r\n1. 以对比学习为浪潮的监督方法被大量的使用。\r\n2. 原型学习取得了很大的成功\r\n\r\n## 对比学习\r\n对比学习在无监督学习中应用广泛。它的核心思想是将训练样本两两进行比较，如果他们之间具有共性，则他们通过一个网络的输出应该尽可能相同。以CV领域为例，在面对没有标记的数据时。每一张图片可以和自己的加噪图片形成正样本对，而于其他图片形成负样本对。或者，将在每一张图片上截出任意两张图片当作正样本，而和其他图片上的截取的图片构成负样本进行学习。\r\n\r\n[C2AM](#ref_C2AM)\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"CV_trick","img":"../../../img/article/2022-09-16-07-22-52.png","href":"other/other-1/14","des":"# CV_trick\r\n\r\n## 数据源改进\r\n\r\n1. **噪音数据删除**\r\n   \r\n   （最大熵删除法、cleanlab等）\r\n\r\n2. **mix-up**\r\n   \r\n   主要思路是在训练数据中抽取两个样本，构造混合样本和混合标签，用于新的增广数据。直观的看，其实就是希望模型输入未另外两个输入的线性组合时，输出也是各自输出的线性组合，即希望模型近似未一个线性系统，来防止过拟合。\r\n\r\n3. **对抗学习**\r\n   \r\n   对抗训练的概念就是在原始输入样本上加一个扰动，得到对抗样本后，用其进行训练。常见的有FGM,PGD等策略，一般是比较稳定提分的方法。\r\n\r\n   例如CV领域可以给图片加入噪声。\r\n\r\n\r\n## 训练技巧\r\n\r\n1. 初始化技巧\r\n   尝试模型初始化方法，不同的分布，分布参数。下图是用不同初始化方法网络性能对比，有兴趣的同学可以看看kaiming的论文Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification 。\r\n\r\n2.","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"输入输出","img":"","href":"unity/unity-0/0","des":"# 输入输出\r\n\r\n本文将简单描述鼠标、键盘的输入方法，以及输出文本的方法。\r\n\r\n## 前后输入\r\n\r\n```c\r\nfloat h = Input.GetAxis(\"Horizontal\");\r\nfloat v = Input.GetAxis(\"Vertical\");\r\n```\r\n\r\n## 鼠标输入\r\n\r\n```c\r\n\r\n```\r\n\r\n## 输出\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"生成","img":"","href":"unity/unity-0/1","des":"# Unity 生成\r\n\r\n## 案例：生成10 个 unity 对象，使用协程\r\n\r\n```c\r\n    void Start()\r\n    {\r\n        StartCoroutine(SpawneEnemy());\r\n    }\r\n\r\n    IEnumerator SpawneEnemy() {\r\n        foreach (Wave wave in waves) {\r\n            for (int i = 0; i < wave.count; i++) {\r\n                // GameObject.Instantiate 接收三个参数， 1. 游戏对象  2. 生成的位置  3. 生成的角度\r\n                GameObject.Instantiate(wave.enemyPrefab, START.position, Quaternion.identity);\r\n                yield return new WaitForSeconds(wave.rate);  // 生产的间隔\r\n     ","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"添加点击事件","img":"../../../img/article/2022-02-12-23-08-18.png","href":"unity/unity-0/2","des":"# unity 点击事件\r\n\r\n对于 3d 场景下物品的点击，需要使用到射线方法。\r\n\r\n## 多个重复对象的点击方法\r\n\r\n【1. 添加Layer】<br />\r\n给这些重复的物品添加相同的Layer, 这步最好在物品复制之前完成。\r\n![添加layer](../../../img/article/2022-02-12-23-08-18.png)\r\n\r\n```c\r\nprivate void Update()\r\n{\r\n    if (Input.GetMouseButtonDown(0)) {\r\n        if (EventSystem.current.IsPointerOverGameObject() == false) {\r\n            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);\r\n            RaycastHit hit;\r\n            bool isCollider = Physics.Raycast(ray,out hit,  1000, LayerMask","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"光","img":"","href":"unity/unity-1/0","des":"1. 资源介绍\r\n\r\nhttps://polyhaven.com/ 拥有大量的HDR贴图\r\n\r\n\r\n冲光：一种做环境光，一种做冲色作为强调","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"Vue安装","img":"","href":"vue/vue-0/0","des":"# Vue 环境配置 \r\n\r\n\r\n## 使用 nvm 创建合适的node\r\n```shell\r\nnvm install <version>\r\n```\r\n\r\n<font color='red'>出现没有npm的情况可以去下面的链接中下载</font>\r\n> https://github.com/npm/cli/archive\r\n\r\n## 安装cnpm\r\n```shell\r\nnpm install cnpm -g\r\n```\r\n\r\n## 安装vue相关内容 \r\n```shell\r\ncnpm install -g @vue/cli\r\n```\r\n\r\n## 使用vue客户端创建vue应用 \r\n```shell\r\nvue create hello-world\r\n```\r\n或者 使用cli-init 创建，两者创建的启动器是不一样的\r\n\r\n```shell\r\nnpm install -g @vue/cli-init\r\n# `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同\r\nvue init webpack my-project\r\n```","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"单组件开发","img":"","href":"vue/vue-0/1","des":"# 使用Vue 进行单组件开发 \r\n\r\n## 1. 安装vue-cli-service-global\r\n```shell \r\ncnpm install @vue/cli-service-global -g\r\ncnpm install vue-template-compiler -g\r\n```\r\n\r\n\r\n## 使用vue-cli-service 进行\r\n```shell \r\nvue-cli-service serve App.vue\r\n```\r\n\r\n\r\n## 参考资料\r\nhttps://www.cnblogs.com/Grani/p/14188144.html \r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"基础","img":"","href":"web/web-0/0","des":"# 静态Blog\r\n\r\n## 简介\r\n静态页面是指只使用js, css, html等前端资源所搭建的网站；而所谓静态博客，即通过生成工具（eg：Hexo；Hugo等），直接将作者所书写的博文编译成静态界面。作者/博主，只需将生成的文件部署在静态 server上面即可被在互联网中访问。 用户通过浏览器访问服务器，直接就回获得已编译的静态资源。\r\n\r\n## 优点\r\n- 【低成本】：使用github，gitee 等代码仓库，即可部署查阅，相比于前后端方式的网站形式，不需要搭建后台服务器。\r\n- 【易部署】：相比于前后端方式的网站形式，静态页面可以满足免于后端开发。\r\n- 【速度快】：没有后端返回数据的步骤，无需查询数据库，纯静态页面返回很快。\r\n\r\n## 缺点\r\n- 【无权限】：静态页面没有权限管理，不支持原生的登录，评论等。\r\n- 【不灵活】：没有后端，如果需要修改文章，需要再次部署。\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"}]}