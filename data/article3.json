{"articles":[{"title":"基础","img":"","href":"web/web-1/0","des":"# react 基础 \r\n\r\n\r\n# TODO\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"函数式组件","img":"","href":"web/web-1/1","des":"# React 函数式组件\r\n\r\n\r\n\r\n\r\n# 案例 \r\n\r\n```js\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <div id=\"test\"></div>\r\n    <div id = \"div\"></div>\r\n</body>\r\n\r\n<script src=\"../React-js/react.development.js\" type=\"text/javascript\"></script>\r\n<script src=\"../React-js/react-dom.development.js\" type=\"text/javascript\"></script>\r\n<script src=\"../React-js/babel.min","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"防抖案例","img":"","href":"web/web-1/2","des":"# 前端防抖操作\r\n\r\n\r\n## 抖动产生原因\r\n&emsp;&emsp;由于前端的交互，用户的操作频率会较高，例如在输入框搜索中，如果用户的每一次输入都要进行请求的话，会带来很多无意义的请求，因此需要对用户的操作进行防抖操作，防止用户出发过多的请求，怎加服务器负担。\r\n\r\n\r\n## 解决方案\r\n一个常见的解决方案就是使用计时器触发，用户第一次输入时，启用计时器，在输入完成后的1s后执行请求，如果用户再次输入，则取消之前的计时器，重新将计时时间设置成1s。这样直到用户输入完成并停止1s，才会发送请求，有效地防止了用户的频繁请求。\r\n\r\n\r\n# 案例 \r\n\r\n```js\r\n\r\n```\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"云开发","img":"","href":"wechat/wechat-0/0","des":"# 云开发\r\n\r\n## 介绍\r\n\r\n微信云开发是微信团队联合腾讯云推出的专业的小程序开发服务。开发者无需搭建服务器，可免鉴权直接使用平台提供的 API 进行业务开发。\r\n\r\n<br />\r\n\r\n## 优点\r\n\r\n使用云开发可以快速开发小程序、小游戏、公众号网页等，并且原生打通微信开放能力。\r\n\r\n- 无需搭建服务器快速构建小程序、公众号\r\n- 免登录、免鉴权调用微信开放服务\r\n- 按量计费，成本更低，后端资源根据业务流量自动扩容，先使用后付费，无需支付闲置成本。\r\n\r\n<br />\r\n\r\n## 费用\r\n\r\n云资源可以免费使用，但是有限额，具体的访问次数和资源分配有着一套规则，详情可以参考[https://developers.weixin.qq.com/miniprogram/dev/wxcloud/billing/quota.html](https://developers.weixin.qq.com/miniprogram/dev/wxcloud/billing/quota.html)。\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"OpenId 的获取和使用","img":"","href":"wechat/wechat-1/0","des":"# 微信小程序OpenId 的获取和使用\r\n\r\n\r\n## 介绍 \r\n\r\nopenId是用户在当前公众号（小程序）下的唯一标识（‘身份证’），就是说通过这个openId，就能区分在这个公众号下具体是哪个用户。\r\n\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"登录流程","img":"../../../img/article/2022-04-17-12-55-20.png","href":"wechat/wechat-1/1","des":"# 微信小程序用户登录一般流程\r\n\r\n## 流程图\r\n\r\n![](../../../img/article/2022-04-17-12-55-20.png)\r\n\r\n## 获取用户OpenId\r\n上文中说过OpenId是微信用户在小程序里的唯一识别码，获取了它，就等于有了用户Id，以方便之后用户敏感的所有操作。那么如何去获取它呢？\r\n\r\n微信提供`wx.login`方法来获取一个叫做`code`的东西，通过`code` + `微信小程序密钥`，来对`https://api.weixin.qq.com/sns/jscode2session` 发起请求，就可以获取用户的`openId`了。\r\n\r\n```js\r\n// 调用 wx.login 获取用户 code\r\nwx.login({\r\n  success: function (res) {\r\n     console.log(res.code)\r\n  }\r\n})\r\n```\r\n\r\n通过以上代码可以放到app的onload方法中，打开小程序就取得用户的code，下一步就需要将code发送给后端服务程序。获取用户的OpenId了。\r\n【前端代码】\r","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"登录代码","img":"","href":"wechat/wechat-1/2","des":"# 微信小程序用户登录具体代码\r\n\r\n上文简单描述了微信小程序的登录大体流程，以及获取OpenId的具体方法，本文将将更加具体的对业务流程进行实现。使用到的主要技术有。\r\n\r\n【本文目标】：在用户进入微信小程序时，获取用户的基本信息，如果用户未注册，就以“游客” 展示小程序。\r\n\r\n\r\n- JWT: 用于记录用户OpenId 和 权限\r\n- HttpClient：用于后台和微信服务器通信","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"锚点跳转","img":"","href":"wechat/wechat-1/3","des":"# 微信小程序锚点跳转\r\n本文将简单描述使用微信小程序完成锚点跳转的方法，在HTML中我们常常使用a标签跳转到指定的元素。那在没有a标签的微信小程序里应该如何实现呢？\r\n\r\n\r\n## 案例说明\r\n在微信中可以使用scroll-view组件实现页面锚点的跳转，scroll-view组件的属性中有一个叫做`scroll-into-view`的属性，当用户使用setData方法改变这个属性的属性值，scroll-view组件会自动将该元素滚动到可见区域。\r\n\r\n## 案例 \r\n\r\nwxml 代码 ：\r\n```html\r\n<scroll-view scroll-into-view=\"{{toView}}\" scroll-y=\"true\" scroll-with-animation=\"true\">\r\n    <view id=\"m1\"> <text> 一 </text> </view>\r\n    <view> <text> 二 </text> </view>\r\n    <view> <text> 三 </text> </view>\r\n    <view> <text> 四 </text> </v","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.872Z"},{"title":"RBAC","img":"../../../img/article/2022-04-19-02-38-54.png","href":"architecture/architecture-0/0","des":"# RBAC 基础 \r\n\r\n<br />\r\n\r\n## 介绍 \r\nRBAC 全名（Role-Based Access Control）基于用户的访问权限控制。用来约束用户对资源的访问。为用户提供相应权限，保证系统的正常运行。RBAC从总体上说有4个大的划分，他们分别是RBAC base （基础核心版），RBAC 1 （角色嵌套版），RBAC 2 （角色约束版），RBAC 3（3=1+2）\r\n\r\n<br />\r\n\r\n## RBAC base\r\nRBAC 将用户对资源的访问用 \"角色\" 进行分离控制。即一个用户可以拥有多个角色， 而一个角色可以拥有多个资源的访问权限。如下图所示。\r\n\r\n![](../../../img/article/2022-04-19-02-38-54.png)\r\n\r\n![](../../../img/article/2022-04-19-02-57-45.png)\r\n\r\n\r\n## RBAC 1\r\n在 RBAC Base 的 基础上加入了角色间的继承关系。也有的规范中抽象出了用户组的概念，其实本质都是角色之间的嵌套包含关系。\r\n\r\n![](../../../img/ar","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.856Z"},{"title":"【有感而发01】怎样才算读好一片论文","img":"","href":"diary/diary-0/1","des":"# 【有感而发01】怎样才算读好一片论文\r\n<font color='gray'>2022-04-12</font>\r\n\r\n&emsp;&emsp;上周粗略的看了大概有24篇的文献，但感觉十分的轻浮。果然，和璇哥讨论时发现自己除了几篇印象深刻的文章以外，根本就讲不出来一片文章的所以然。\r\n\r\n&emsp;&emsp;于是我向璇哥请教，璇哥给我提了两点建议，我觉得挺有道理，有所感悟，所以先把它记下来，就我这忘性，不知道什么时候就想不起来了...\r\n\r\n## 1. 首先要看题目\r\n&emsp;&emsp;一篇好的文章，题目包含了它的主旨和创新。通过阅读标题，要明确作者的创新点，检验自己是否读懂一片文章的关键就是能不能说出题目中创新点的具体做法，能不能在论文的流程图里找到创新点对应的版块。\r\n\r\n## 2. 整理笔记时不要机翻\r\n&emsp;&emsp;机翻只是一种辅助理解的手段，直接使用机器翻译的文章，会破坏原本作者的行文逻辑。\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-09-16T01:00:09.856Z"}]}